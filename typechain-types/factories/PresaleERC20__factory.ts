/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PresaleERC20, PresaleERC20Interface } from "../PresaleERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountDaiTokens",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buyers",
    outputs: [
      {
        internalType: "uint256",
        name: "amountDaiSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenPurchased",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountPaid",
        type: "uint256",
      },
    ],
    name: "calculateAmountTokensPurchased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateNumberOfTokenLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dai",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goalPresale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mercy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "miERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moveTokensToTreasury",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceTokenPerDai",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052735b38da6a701c568545dcfcb03fcb875f56beddc4600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606960055562030d406006553480156200007257600080fd5b506040516200219238038062002192833981810160405281019062000098919062000249565b6000620000af620001d760201b620011271760201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000290565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021182620001e4565b9050919050565b620002238162000204565b81146200022f57600080fd5b50565b600081519050620002438162000218565b92915050565b60008060408385031215620002635762000262620001df565b5b6000620002738582860162000232565b9250506020620002868582860162000232565b9150509250929050565b611ef280620002a06000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806361d027b311610097578063c9bcba8011610066578063c9bcba8014610267578063d1028d0414610285578063f2fde38b146102a3578063f4b9fa75146102bf576100f5565b806361d027b3146101f0578063715018a61461020e5780638da5cb5b1461021857806397a993aa14610236576100f5565b80633425cb19116100d35780633425cb191461017857806337d63e251461019657806340193883146101b45780635d1b6e9d146101d2576100f5565b806316c8aeed146100fa57806326b0d014146101185780632d296bf114610148575b600080fd5b6101026102dd565b60405161010f91906114c7565b60405180910390f35b610132600480360381019061012d9190611513565b610380565b60405161013f91906114c7565b60405180910390f35b610162600480360381019061015d9190611513565b610397565b60405161016f919061155b565b60405180910390f35b61018061088a565b60405161018d919061155b565b60405180910390f35b61019e610932565b6040516101ab91906114c7565b60405180910390f35b6101bc610938565b6040516101c991906114c7565b60405180910390f35b6101da61093e565b6040516101e7919061155b565b60405180910390f35b6101f8610b58565b60405161020591906115f5565b60405180910390f35b610216610b7e565b005b610220610cd1565b60405161022d9190611631565b60405180910390f35b610250600480360381019061024b9190611678565b610cfa565b60405161025e9291906116a5565b60405180910390f35b61026f610d1e565b60405161027c919061155b565b60405180910390f35b61028d610f19565b60405161029a91906115f5565b60405180910390f35b6102bd60048036038101906102b89190611678565b610f3f565b005b6102c7611101565b6040516102d491906115f5565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033a9190611631565b602060405180830381865afa158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b91906116e3565b905090565b600060055482610390919061173f565b9050919050565b600060018210156103dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d4906117f6565b60405180910390fd5b60006103e88361112f565b905060006103f582610380565b905083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610455929190611816565b602060405180830381865afa158015610472573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049691906116e3565b10156104d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ce9061188b565b60405180910390fd5b83600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105339190611631565b602060405180830381865afa158015610550573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057491906116e3565b10156105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac906118f7565b60405180910390fd5b83600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106119190611631565b602060405180830381865afa15801561062e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065291906116e3565b1015610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90611989565b60405180910390fd5b8061069c6102dd565b10156106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d4906118f7565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461072f91906119a9565b9250508190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461078891906119a9565b925050819055506107de333084600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661118b909392919063ffffffff16565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161083b9291906119ff565b6020604051808303816000875af115801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e9190611a54565b50600192505050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108e79190611631565b602060405180830381865afa158015610904573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092891906116e3565b6006541015905090565b60055481565b60065481565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541161098e57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116109dd57600080fd5b610a6e3330600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661118b909392919063ffffffff16565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040518363ffffffff1660e01b8152600401610b0d9291906119ff565b6020604051808303816000875af1158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b509190611a54565b506001905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b86611127565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0a90611acd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090508060000154908060010154905082565b6000610d28611127565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610db5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dac90611acd565b60405180910390fd5b610dbd61088a565b610dfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df390611b39565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e599190611631565b602060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9a91906116e3565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610f108183600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112149092919063ffffffff16565b60019250505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f47611127565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcb90611acd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611044576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103b90611bcb565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000806000905060006005546111436102dd565b61114d9190611c1a565b90508084111561116a5780846111639190611c4b565b9150611176565b61117384610380565b93505b81846111829190611c4b565b92505050919050565b61120e846323b872dd60e01b8585856040516024016111ac93929190611c7f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061129a565b50505050565b6112958363a9059cbb60e01b84846040516024016112339291906119ff565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061129a565b505050565b60006112fc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113619092919063ffffffff16565b905060008151111561135c578080602001905181019061131c9190611a54565b61135b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135290611d28565b60405180910390fd5b5b505050565b60606113708484600085611379565b90509392505050565b60606113848561149b565b6113c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ba90611d94565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113ec9190611e2e565b60006040518083038185875af1925050503d8060008114611429576040519150601f19603f3d011682016040523d82523d6000602084013e61142e565b606091505b50915091508115611443578092505050611493565b6000815111156114565780518082602001fd5b836040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148a9190611e9a565b60405180910390fd5b949350505050565b600080823b905060008111915050919050565b6000819050919050565b6114c1816114ae565b82525050565b60006020820190506114dc60008301846114b8565b92915050565b600080fd5b6114f0816114ae565b81146114fb57600080fd5b50565b60008135905061150d816114e7565b92915050565b600060208284031215611529576115286114e2565b5b6000611537848285016114fe565b91505092915050565b60008115159050919050565b61155581611540565b82525050565b6000602082019050611570600083018461154c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115bb6115b66115b184611576565b611596565b611576565b9050919050565b60006115cd826115a0565b9050919050565b60006115df826115c2565b9050919050565b6115ef816115d4565b82525050565b600060208201905061160a60008301846115e6565b92915050565b600061161b82611576565b9050919050565b61162b81611610565b82525050565b60006020820190506116466000830184611622565b92915050565b61165581611610565b811461166057600080fd5b50565b6000813590506116728161164c565b92915050565b60006020828403121561168e5761168d6114e2565b5b600061169c84828501611663565b91505092915050565b60006040820190506116ba60008301856114b8565b6116c760208301846114b8565b9392505050565b6000815190506116dd816114e7565b92915050565b6000602082840312156116f9576116f86114e2565b5b6000611707848285016116ce565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061174a826114ae565b9150611755836114ae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561178e5761178d611710565b5b828202905092915050565b600082825260208201905092915050565b7f4d696e2062757920312044616900000000000000000000000000000000000000600082015250565b60006117e0600d83611799565b91506117eb826117aa565b602082019050919050565b6000602082019050818103600083015261180f816117d3565b9050919050565b600060408201905061182b6000830185611622565b6118386020830184611622565b9392505050565b7f4669727374206772616e7420616c6c6f77616e63650000000000000000000000600082015250565b6000611875601583611799565b91506118808261183f565b602082019050919050565b600060208201905081810360008301526118a481611868565b9050919050565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b60006118e1601183611799565b91506118ec826118ab565b602082019050919050565b60006020820190508181036000830152611910816118d4565b9050919050565b7f427579657220646f6573206e6f74206861766520656e6f75676820746f6b656e60008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611973602183611799565b915061197e82611917565b604082019050919050565b600060208201905081810360008301526119a281611966565b9050919050565b60006119b4826114ae565b91506119bf836114ae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119f4576119f3611710565b5b828201905092915050565b6000604082019050611a146000830185611622565b611a2160208301846114b8565b9392505050565b611a3181611540565b8114611a3c57600080fd5b50565b600081519050611a4e81611a28565b92915050565b600060208284031215611a6a57611a696114e2565b5b6000611a7884828501611a3f565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ab7602083611799565b9150611ac282611a81565b602082019050919050565b60006020820190508181036000830152611ae681611aaa565b9050919050565b7f476f616c20636f6d706c65746564000000000000000000000000000000000000600082015250565b6000611b23600e83611799565b9150611b2e82611aed565b602082019050919050565b60006020820190508181036000830152611b5281611b16565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611bb5602683611799565b9150611bc082611b59565b604082019050919050565b60006020820190508181036000830152611be481611ba8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c25826114ae565b9150611c30836114ae565b925082611c4057611c3f611beb565b5b828204905092915050565b6000611c56826114ae565b9150611c61836114ae565b925082821015611c7457611c73611710565b5b828203905092915050565b6000606082019050611c946000830186611622565b611ca16020830185611622565b611cae60408301846114b8565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611d12602a83611799565b9150611d1d82611cb6565b604082019050919050565b60006020820190508181036000830152611d4181611d05565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611d7e601d83611799565b9150611d8982611d48565b602082019050919050565b60006020820190508181036000830152611dad81611d71565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611de8578082015181840152602081019050611dcd565b83811115611df7576000848401525b50505050565b6000611e0882611db4565b611e128185611dbf565b9350611e22818560208601611dca565b80840191505092915050565b6000611e3a8284611dfd565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611e6c82611e45565b611e768185611799565b9350611e86818560208601611dca565b611e8f81611e50565b840191505092915050565b60006020820190508181036000830152611eb48184611e61565b90509291505056fea2646970667358221220a18e76208f403f00c0bc24142a2d4f3e8fa65cb5ea9910e9171dd5a4b055d28864736f6c634300080b0033";

type PresaleERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PresaleERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PresaleERC20__factory extends ContractFactory {
  constructor(...args: PresaleERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PresaleERC20";
  }

  deploy(
    daiAddress: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PresaleERC20> {
    return super.deploy(
      daiAddress,
      token,
      overrides || {}
    ) as Promise<PresaleERC20>;
  }
  getDeployTransaction(
    daiAddress: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(daiAddress, token, overrides || {});
  }
  attach(address: string): PresaleERC20 {
    return super.attach(address) as PresaleERC20;
  }
  connect(signer: Signer): PresaleERC20__factory {
    return super.connect(signer) as PresaleERC20__factory;
  }
  static readonly contractName: "PresaleERC20";
  public readonly contractName: "PresaleERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PresaleERC20Interface {
    return new utils.Interface(_abi) as PresaleERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PresaleERC20 {
    return new Contract(address, _abi, signerOrProvider) as PresaleERC20;
  }
}
