/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dai, DaiInterface } from "../Dai";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: true,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "LogNote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "pull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024dd380380620024dd833981810160405281019062000037919062000191565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600e81526020017f44616920537461626c65636f696e000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016200012e95949392919062000234565b604051602081830303815290604052805190602001206005819055505062000291565b600080fd5b6000819050919050565b6200016b8162000156565b81146200017757600080fd5b50565b6000815190506200018b8162000160565b92915050565b600060208284031215620001aa57620001a962000151565b5b6000620001ba848285016200017a565b91505092915050565b6000819050919050565b620001d881620001c3565b82525050565b620001e98162000156565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021c82620001ef565b9050919050565b6200022e816200020f565b82525050565b600060a0820190506200024b6000830188620001cd565b6200025a6020830187620001cd565b620002696040830186620001cd565b620002786060830185620001de565b62000287608083018462000223565b9695505050505050565b61223c80620002a16000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb14610365578063b753a98c14610395578063bb35783b146103b1578063bf353dbb146103cd578063dd62ed3e146103fd578063f2d5d56b1461042d57610142565b80637ecebe00146102c35780638fcbaf0c146102f357806395d89b411461030f5780639c52a7f11461032d5780639dc29fac1461034957610142565b8063313ce5671161010a578063313ce567146102015780633644e5151461021f57806340c10f191461023d57806354fd4d501461025957806365fae35e1461027757806370a082311461029357610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b357806330adf81f146101e3575b600080fd5b61014f610449565b60405161015c91906118ae565b60405180910390f35b61017f600480360381019061017a9190611969565b610482565b60405161018c91906119c4565b60405180910390f35b61019d610574565b6040516101aa91906119ee565b60405180910390f35b6101cd60048036038101906101c89190611a09565b61057a565b6040516101da91906119c4565b60405180910390f35b6101eb610a5b565b6040516101f89190611a75565b60405180910390f35b610209610a82565b6040516102169190611aac565b60405180910390f35b610227610a87565b6040516102349190611a75565b60405180910390f35b61025760048036038101906102529190611969565b610a8d565b005b610261610c16565b60405161026e91906118ae565b60405180910390f35b610291600480360381019061028c9190611ac7565b610c4f565b005b6102ad60048036038101906102a89190611ac7565b610d4a565b6040516102ba91906119ee565b60405180910390f35b6102dd60048036038101906102d89190611ac7565b610d62565b6040516102ea91906119ee565b60405180910390f35b61030d60048036038101906103089190611b78565b610d7a565b005b610317611131565b60405161032491906118ae565b60405180910390f35b61034760048036038101906103429190611ac7565b61116a565b005b610363600480360381019061035e9190611969565b611265565b005b61037f600480360381019061037a9190611969565b611684565b60405161038c91906119c4565b60405180910390f35b6103af60048036038101906103aa9190611969565b611699565b005b6103cb60048036038101906103c69190611a09565b6116a9565b005b6103e760048036038101906103e29190611ac7565b6116ba565b6040516103f491906119ee565b60405180910390f35b61041760048036038101906104129190611c2e565b6116d2565b60405161042491906119ee565b60405180910390f35b61044760048036038101906104429190611969565b6116f7565b005b6040518060400160405280600e81526020017f44616920537461626c65636f696e00000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161056291906119ee565b60405180910390a36001905092915050565b60015481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590611cba565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156106c857506fffffffffffffffffffffffffffffffff8016600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108d35761070d6040518060400160405280601e81526020017f547279696e6720746f2073656e6420257320746f6b656e7320746f20257300008152508386611707565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c390611d26565b60405180910390fd5b610852600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836117a6565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61091c600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836117a6565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109a8600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836117c9565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a4891906119ee565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60055481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610b0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0590611d92565b60405180910390fd5b610b57600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826117c9565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ba6600154826117c9565b6001819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c0a91906119ee565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610cd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc790611d92565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60026020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b60006005547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a604051602001610dbd96959493929190611dc1565b60405160208183030381529060405280519060200120604051602001610de4929190611e9a565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415610e6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6390611f1d565b60405180910390fd5b60018185858560405160008152602001604052604051610e8f9493929190611f3d565b6020604051602081039080840390855afa158015610eb1573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610f28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1f90611fce565b60405180910390fd5b6000861480610f375750854211155b610f76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6d9061203a565b60405180910390fd5b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610fc690612089565b91905055871461100b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110029061211e565b60405180910390fd5b60008561101957600061102b565b6fffffffffffffffffffffffffffffffff5b6fffffffffffffffffffffffffffffffff16905080600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161111d91906119ee565b60405180910390a350505050505050505050565b6040518060400160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e290611d92565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156112e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112de90611cba565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156113b157506fffffffffffffffffffffffffffffffff8016600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1561157c5780600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146c90611d26565b60405180910390fd5b6114fb600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826117a6565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6115c5600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826117a6565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611614600154826117a6565b600181905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161167891906119ee565b60405180910390a35050565b600061169133848461057a565b905092915050565b6116a433838361057a565b505050565b6116b483838361057a565b50505050565b60006020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b61170282338361057a565b505050565b6117a183838360405160240161171f9392919061213e565b6040516020818303038152906040527fe3849f79000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506117ec565b505050565b60008282846117b5919061217c565b91508111156117c357600080fd5b92915050565b60008282846117d891906121b0565b91508110156117e657600080fd5b92915050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561184f578082015181840152602081019050611834565b8381111561185e576000848401525b50505050565b6000601f19601f8301169050919050565b600061188082611815565b61188a8185611820565b935061189a818560208601611831565b6118a381611864565b840191505092915050565b600060208201905081810360008301526118c88184611875565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611900826118d5565b9050919050565b611910816118f5565b811461191b57600080fd5b50565b60008135905061192d81611907565b92915050565b6000819050919050565b61194681611933565b811461195157600080fd5b50565b6000813590506119638161193d565b92915050565b600080604083850312156119805761197f6118d0565b5b600061198e8582860161191e565b925050602061199f85828601611954565b9150509250929050565b60008115159050919050565b6119be816119a9565b82525050565b60006020820190506119d960008301846119b5565b92915050565b6119e881611933565b82525050565b6000602082019050611a0360008301846119df565b92915050565b600080600060608486031215611a2257611a216118d0565b5b6000611a308682870161191e565b9350506020611a418682870161191e565b9250506040611a5286828701611954565b9150509250925092565b6000819050919050565b611a6f81611a5c565b82525050565b6000602082019050611a8a6000830184611a66565b92915050565b600060ff82169050919050565b611aa681611a90565b82525050565b6000602082019050611ac16000830184611a9d565b92915050565b600060208284031215611add57611adc6118d0565b5b6000611aeb8482850161191e565b91505092915050565b611afd816119a9565b8114611b0857600080fd5b50565b600081359050611b1a81611af4565b92915050565b611b2981611a90565b8114611b3457600080fd5b50565b600081359050611b4681611b20565b92915050565b611b5581611a5c565b8114611b6057600080fd5b50565b600081359050611b7281611b4c565b92915050565b600080600080600080600080610100898b031215611b9957611b986118d0565b5b6000611ba78b828c0161191e565b9850506020611bb88b828c0161191e565b9750506040611bc98b828c01611954565b9650506060611bda8b828c01611954565b9550506080611beb8b828c01611b0b565b94505060a0611bfc8b828c01611b37565b93505060c0611c0d8b828c01611b63565b92505060e0611c1e8b828c01611b63565b9150509295985092959890939650565b60008060408385031215611c4557611c446118d0565b5b6000611c538582860161191e565b9250506020611c648582860161191e565b9150509250929050565b7f4461692f696e73756666696369656e742d62616c616e63650000000000000000600082015250565b6000611ca4601883611820565b9150611caf82611c6e565b602082019050919050565b60006020820190508181036000830152611cd381611c97565b9050919050565b7f4461692f696e73756666696369656e742d616c6c6f77616e6365000000000000600082015250565b6000611d10601a83611820565b9150611d1b82611cda565b602082019050919050565b60006020820190508181036000830152611d3f81611d03565b9050919050565b7f4461692f6e6f742d617574686f72697a65640000000000000000000000000000600082015250565b6000611d7c601283611820565b9150611d8782611d46565b602082019050919050565b60006020820190508181036000830152611dab81611d6f565b9050919050565b611dbb816118f5565b82525050565b600060c082019050611dd66000830189611a66565b611de36020830188611db2565b611df06040830187611db2565b611dfd60608301866119df565b611e0a60808301856119df565b611e1760a08301846119b5565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611e63600283611e22565b9150611e6e82611e2d565b600282019050919050565b6000819050919050565b611e94611e8f82611a5c565b611e79565b82525050565b6000611ea582611e56565b9150611eb18285611e83565b602082019150611ec18284611e83565b6020820191508190509392505050565b7f4461692f696e76616c69642d616464726573732d300000000000000000000000600082015250565b6000611f07601583611820565b9150611f1282611ed1565b602082019050919050565b60006020820190508181036000830152611f3681611efa565b9050919050565b6000608082019050611f526000830187611a66565b611f5f6020830186611a9d565b611f6c6040830185611a66565b611f796060830184611a66565b95945050505050565b7f4461692f696e76616c69642d7065726d69740000000000000000000000000000600082015250565b6000611fb8601283611820565b9150611fc382611f82565b602082019050919050565b60006020820190508181036000830152611fe781611fab565b9050919050565b7f4461692f7065726d69742d657870697265640000000000000000000000000000600082015250565b6000612024601283611820565b915061202f82611fee565b602082019050919050565b6000602082019050818103600083015261205381612017565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061209482611933565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156120c7576120c661205a565b5b600182019050919050565b7f4461692f696e76616c69642d6e6f6e6365000000000000000000000000000000600082015250565b6000612108601183611820565b9150612113826120d2565b602082019050919050565b60006020820190508181036000830152612137816120fb565b9050919050565b600060608201905081810360008301526121588186611875565b905061216760208301856119df565b6121746040830184611db2565b949350505050565b600061218782611933565b915061219283611933565b9250828210156121a5576121a461205a565b5b828203905092915050565b60006121bb82611933565b91506121c683611933565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121fb576121fa61205a565b5b82820190509291505056fea264697066735822122029ef1fc258373ab9a64acc906d547c1f350e9a38e84c980e87edd75d5a686a7d64736f6c634300080b0033";

type DaiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DaiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dai__factory extends ContractFactory {
  constructor(...args: DaiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Dai";
  }

  deploy(
    chainId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dai> {
    return super.deploy(chainId_, overrides || {}) as Promise<Dai>;
  }
  getDeployTransaction(
    chainId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(chainId_, overrides || {});
  }
  attach(address: string): Dai {
    return super.attach(address) as Dai;
  }
  connect(signer: Signer): Dai__factory {
    return super.connect(signer) as Dai__factory;
  }
  static readonly contractName: "Dai";
  public readonly contractName: "Dai";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DaiInterface {
    return new utils.Interface(_abi) as DaiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Dai {
    return new Contract(address, _abi, signerOrProvider) as Dai;
  }
}
